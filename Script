      
 if game.PlaceId == 1517425836 or game.PlaceId ==  2000064164  or game.PlaceId == 6499203726 or game.PlaceId == 4026676776 or game.PlaceId == 6128781746 or game.PlaceId == 4874406733 or game.PlaceId == 6361792543 then --Seaboard
   
        local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
        local Window = Library.CreateLib("State Of Anarchy", "GrapeTheme")
        local Main = Window:NewTab("Main")
        local MainSection = Main:NewSection("Main")
        local Players = Window:NewTab("Player")
        local PlayersSection = Players:NewSection("Player")
        local Combat = Window:NewTab("Combat")
        local CombatSection = Combat:NewSection("Combat")
        local Others = Window:NewTab("Other's")
        local OthersSection = Others:NewSection("Other's")
        local Info = Window:NewTab("Info")
        local FunnyOptions = Window:NewTab("Troll")
        local FunctionOptionsSection = FunnyOptions:NewSection("Funny Stuff")
        local InfoSection = Info:NewSection("This Was Made By Shturman#8821")
        local InfoSection1 = Info:NewSection("Im really not the best lua scripter")
        local InfoSection2 = Info:NewSection("as i learned lua by looking at other scripts")
        local InfoSection3 = Info:NewSection("i would like some help to learn more")
        local InfoSection4 = Info:NewSection("my Discord is Shturman#8821 just drop me help")
        local InfoSection5 = Info:NewSection("im kinda retarded")
        local Settings = Window:NewTab("Settings")
        local SettingsSection = Settings:NewSection("Settings")
        



        



     
    
    SettingsSection:NewKeybind("Toggle UI", "Change the Button to toggle UI", Enum.KeyCode.X, function()
    	Library:ToggleUI()
    end)
        
        
        
        --PLAYERS
        PlayersSection:NewToggle("FastRun", "As i dont really know lua i havent found a way to toggle it", function(state)
            if state then
            print("Clicked")
            getgenv().Run = true;
            while wait () do
                if getgenv().Run == true then 
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
               
                end
            end
        else
         getgenv().Run = false;
         print("off")
        end
    end)
    
    
    
    
    
    
    
    PlayersSection:NewButton("Light", "some dumb thing i made it works tho", function()
            print ("On")
            pcall(function()
                local lighting = game:GetService("Lighting");
                lighting.Ambient = Color3.fromRGB(255, 255, 255);
                lighting.Brightness = 1;
                lighting.FogEnd = 1e10;
                for i, v in pairs(lighting:GetDescendants()) do
                    if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") then
                        v.Enabled = false;
                    end;
                end;
                lighting.Changed:Connect(function()
                    lighting.Ambient = Color3.fromRGB(255, 255, 255);
                    lighting.Brightness = 1;
                    lighting.FogEnd = 1e10;
                end);
                spawn(function()
                    local character = game:GetService("Players").LocalPlayer.Character;
                    while wait() do
                        repeat wait() until character ~= nil;
                        if not character.HumanoidRootPart:FindFirstChildWhichIsA("PointLight") then
                            local headlight = Instance.new("PointLight", character.HumanoidRootPart);
                            headlight.Brightness = 8;
                            headlight.Range = 1000;
                        end;
                    end;
                end);
            end)
        end)
    
    
    PlayersSection:NewButton("Fly (Z)", "il will change the keybind soon", function(clicked)
        
        print("Clicked")
        repeat wait()
    	until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Head") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
    	local mouse = game.Players.LocalPlayer:GetMouse()
    	repeat wait() until mouse
    	local plr = game.Players.LocalPlayer
    	local torso = plr.Character.Head
    	local flying = true
    	local deb = true
    	local ctrl = {f = 0, b = 0, l = 0, r = 0}
    	local lastctrl = {f = 0, b = 0, l = 0, r = 0}
    	local maxspeed = 100
    	local speed = 0
    
    	function Fly()
    		local bg = Instance.new("BodyGyro", torso)
    		bg.P = 9e4
    		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    		bg.cframe = torso.CFrame
    		local bv = Instance.new("BodyVelocity", torso)
    		bv.velocity = Vector3.new(0,0.1,0)
    		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
    		repeat wait()
    			plr.Character.Humanoid.PlatformStand = true
    			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
    				speed = speed+.5+(speed/maxspeed)
    				if speed > maxspeed then
    					speed = maxspeed
    				end
    			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
    				speed = speed-1
    				if speed < 0 then
    					speed = 0
    				end
    			end
    			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
    				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
    				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
    			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
    				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
    			else
    				bv.velocity = Vector3.new(0,0.1,0)
    			end
    			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
    		until not flying
    		ctrl = {f = 0, b = 0, l = 0, r = 0}
    		lastctrl = {f = 0, b = 0, l = 0, r = 0}
    		speed = 0
    		bg:Destroy()
    		bv:Destroy()
    		plr.Character.Humanoid.PlatformStand = false
    	end
    	mouse.KeyDown:connect(function(key)
    		if key:lower() == "z" then
    			if flying then flying = false
    			else
    				flying = true
    				Fly()
    			end
    		elseif key:lower() == "w" then
    			ctrl.f = 1
    		elseif key:lower() == "s" then
    			ctrl.b = -1
    		elseif key:lower() == "a" then
    			ctrl.l = -1
    		elseif key:lower() == "d" then
    			ctrl.r = 1
    		end
    	end)
    	mouse.KeyUp:connect(function(key)
    		if key:lower() == "w" then
    			ctrl.f = 0
    		elseif key:lower() == "s" then
    			ctrl.b = 0
    		elseif key:lower() == "a" then
    			ctrl.l = 0
    		elseif key:lower() == "d" then
    			ctrl.r = 0
    		end
    	end)
    	Fly()
    
        end)
    
    
    
    
    --Main
    MainSection:NewToggle("ESP/Names", "Some im kinda good at meh...", function(state)
        if state then
                print("Toggle On")
                local plr = game.Players.LocalPlayer
                local camera = game:GetService("Workspace").CurrentCamera
                local CurrentCamera = Workspace.CurrentCamera
                local worldToViewportPoint = CurrentCamera.worldToViewportPoint
    
    
                local HeadOff = Vector3.new(0,0.5,0)
                local LegOff = Vector3.new(0,3,0)
    
    
                for i,v in pairs(game.Players:GetChildren()) do 
                local BoxOutline = Drawing.new ("Square")
                BoxOutline.Visible = false
                BoxOutline.Color = Color3.fromRGB(0, 255, 0)
                BoxOutline.Thickness = 2
                BoxOutline.Transparency = 1
                BoxOutline.Filled = false
    
    
                local Box = Drawing.new ("Square")
                Box.Visible = false
                Box.Color = Color3.new(1,1,1)
                Box.Thickness = 1
                Box.Transparency = 1
                Box.Filled = false
    
                local HealthBarOutline = Drawing.new("Square") 
                HealthBarOutline.Thickness = 3
                HealthBarOutline.Filled = false
                HealthBarOutline.Color = Color3.new(0,0,0)
                HealthBarOutline.Transparency = 1
                HealthBarOutline.Visible = false
    
                local HealthBar = Drawing.new("Square")
                HealthBar.Thickness = 1
                HealthBar.Filled = false
                HealthBar.Color = Color3.new(0,255,0)
                HealthBar.Transparency = 1
                HealthBar.Visible = false
    
                local NameTag = Drawing.new ("Text")
                NameTag.Visible = false
                NameTag.Text = v.Name
                NameTag.Color = Color3.fromRGB(0,255,0)
                NameTag.Center = true
    
    
                function boxesp()
                    game:GetService("RunService").RenderStepped:Connect(function()
                        if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= plr and v.Character.Humanoid.Health > 0 then 
                            local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
    
    
    
                            local RootPart = v.Character.HumanoidRootPart
                            local Head = v.Character.Head
                            local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
                            local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
                            local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff)
    
    
                            if onScreen then 
                                BoxOutline.Size = Vector2.new (1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                                BoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)
                                BoxOutline.Visible = true
    
    
                                Box.Size = Vector2.new (1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                                Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                                Box.Visible = true
    
    
                                NameTag.Size = 25
                                NameTag.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)
                                NameTag.Visible = true
                                NameTag.Outline = false
    
    
    
                                HealthBarOutline.Size= Vector2.new(2, HeadPosition.Y - LegPosition.Y)
                                HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0)
                                HealthBarOutline.Visible = true
    
                                HealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (game:GetService("Players")[v.Character.Name].Humanoid["MaxHealth"].Value / math.clamp(game:GetService("Players")[v.Character.Name].Humanoid["Health"].Value, 0, game:GetService("Players")[v.Character.Name].Humanoid:WaitForChild("MaxHealth").Value)))
                                HealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + (1/HealthBar.Size.Y))
                                HealthBar.Visible = true
    
                                if v.TeamColor == plr.TeamColor then
                                    BoxOutline.Visible = false
                                    Box.Visible = false
                                    HealthBarOutline.Visible = false
                                    HealthBar.Visible = false
                                    NameTag.Visible = false
                                else
                                    BoxOutline.Visible = true
                                    Box.Visible = true
                                    HealthBarOutline.Visible = true
                                    HealthBar.Visible = true
                                    NameTag.Visible = true
                                end
    
                            else
                                BoxOutline.Visible = false
                                Box.Visible = false
                                HealthBarOutline.Visible = false
                                HealthBar.Visible = false
                                NameTag.Visible = false
                            end
                        else
                            BoxOutline.Visible = false
                            Box.Visible = false
                            HealthBarOutline.Visible = false
                            HealthBar.Visible = false
                            NameTag.Visible = false
                        end
                    end)
                end
                coroutine.wrap (boxesp)()
            end
    
            game.Players.PlayerAdded:Connect(function(v)
                local BoxOutline = Drawing.new ("Square")
                BoxOutline.Visible = false
                BoxOutline.Color = Color3.fromRGB(0, 255, 0)
                BoxOutline.Thickness = 2
                BoxOutline.Transparency = 1
                BoxOutline.Filled = false
    
    
                local Box = Drawing.new ("Square")
                Box.Visible = false
                Box.Color = Color3.new(1,1,1)
                Box.Thickness = 1
                Box.Transparency = 1
                Box.Filled = false
    
                local HealthBarOutline = Drawing.new("Square") 
                HealthBarOutline.Thickness = 3
                HealthBarOutline.Filled = false
                HealthBarOutline.Color = Color3.new(0,0,0)
                HealthBarOutline.Transparency = 1
                HealthBarOutline.Visible = false
    
                local NameTag = Drawing.new ("Text")
                NameTag.Visible = false
                NameTag.Text = v.Name
                NameTag.Color = Color3.fromRGB(0,255,0)
                NameTag.Center = true
    
                local HealthBar = Drawing.new("Square")
                HealthBar.Thickness = 1
                HealthBar.Filled = false
                HealthBar.Color = Color3.new(0,255,0)
                HealthBar.Transparency = 1
                HealthBar.Visible = false
    
    
                function boxesp()
                    game:GetService("RunService").RenderStepped:Connect(function()
                        if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= plr and v.Character.Humanoid.Health > 0 then 
                            local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
    
    
    
                            local RootPart = v.Character.HumanoidRootPart
                            local Head = v.Character.Head
                            local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
                            local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
                            local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff)
    
    
                            if onScreen then 
                                BoxOutline.Size = Vector2.new (1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                                BoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)
                                BoxOutline.Visible = true
    
    
                                NameTag.Size = 25
                                NameTag.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)
                                NameTag.Visible = true
                                NameTag.Outline = false
    
    
                                Box.Size = Vector2.new (1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                                Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                                Box.Visible = true
    
    
    
    
    
                                HealthBarOutline.Size= Vector2.new(2, HeadPosition.Y - LegPosition.Y)
                                HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0)
                                HealthBarOutline.Visible = true
    
                                HealthBar.Size = Vector2.new(2,(HeadPosition.Y - LegPosition.Y) / (game:GetService("Players")[v.Character.Name].Humanoid["MaxHealth"].Value / math.clamp(game:GetService("Players")[v.Character.Name].Humanoid["Health"].Value, 0, game:GetService("Players")[v.Character.Name].Humanoid:WaitForChild("MaxHealth").Value)))
                                HealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + (1/HealthBar.Size.Y))
                                HealthBar.Visible = true
    
                                if v.TeamColor == plr.TeamColor then
                                    BoxOutline.Visible = false
                                    Box.Visible = false
                                    HealthBarOutline.Visible = false
                                    HealthBar.Visible = false
                                    NameTag.Visible = false
                                else
                                    BoxOutline.Visible = true
                                    Box.Visible = true
                                    HealthBarOutline.Visible = true
                                    HealthBar.Visible = true
                                    NameTag.Visible = true
                                end
    
                            else
                                BoxOutline.Visible = false
                                Box.Visible = false
                                HealthBarOutline.Visible = false
                                HealthBar.Visible = false
                                NameTag.Visible = false
                            end
                        else
                            BoxOutline.Visible = false
                            Box.Visible = false
                            HealthBarOutline.Visible = false
                            HealthBar.Visible = false
                            NameTag.Visible = false
                        end
                    end)
                end
    		coroutine.wrap (boxesp)()
    	end)
        else
            print("Toggle Off")
            
        end
    end)
    
    MainSection:NewToggle("Tracers", "Lines To the Players", function(state)
        if state then
            print("Toggle on")
            local lplr = game.Players.LocalPlayer
            local camera = game:GetService("Workspace").CurrentCamera
            local CurrentCamera = workspace.CurrentCamera
            local worldToViewportPoint = CurrentCamera.worldToViewportPoint
    
    	    _G.Teamcheck = false
    
    	    for i,v in pairs(game.Players:GetChildren()) do
                local Tracer = Drawing.new("Line")
                Tracer.Visible = false
                Tracer.Color = Color3.new(0, 255, 0)
                Tracer.Thickness = 1
                Tracer.Transparency = 1
    
    		    function lineesp()
    			game:GetService("RunService").RenderStepped:Connect(function ()
    				if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
    					local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
    
    					if onScreen then
    						Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    						Tracer.To = Vector2.new(Vector.X, Vector.Y)
    
    						if _G.Teamcheck and v.TeamColor == lplr.TeamColor then
    							Tracer.Visible = false
    						else
    							Tracer.Visible = true
    						end
    					else
    						Tracer.Visible = false
    					end
    				else
    					Tracer.Visible = false
    
    				end
    			end)
    		end
    		coroutine.wrap(lineesp)()
    	end
    
    	game.Players.PlayerAdded:Connect(function (v)
    		local Tracer = Drawing.new("Line")
    		Tracer.Visible = false
    		Tracer.Color = Color3.new(0, 255, 0)
    		Tracer.Thickness = 1
    		Tracer.Transparency = 1
    
    		function lineesp()
    			game:GetService("RunService").RenderStepped:Connect(function ()
    				if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
    					local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
    
    					if onScreen then
    						Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    						Tracer.To = Vector2.new(Vector.X, Vector.Y)
    
    						if _G.Teamcheck and v.TeamColor == lplr.TeamColor then
    							Tracer.Visible = false
    						else
    							Tracer.Visible = true
    						end
    					else
    						Tracer.Visible = false
    					end
    				else
    					Tracer.Visible = false
    
    				end
    			end)
    		end
    		coroutine.wrap(lineesp)()
    	end)
            else
                print("Toggle Off")
            end
    end)
    
    
    
    
    
    
    --Combat
    CombatSection:NewToggle("Big HitBox", "lil bug at the moment when toggle but works tho", function(state)
        if state then
            getgenv().HitBox = true;
            print("Toggle on")
            if getgenv().HitBox == true then
                _G.HeadSize = 50
        	    _G.Disabled = true
                game:GetService('RunService').RenderStepped:connect(function()
                    if _G.Disabled then
                        for i,v in next, game:GetService('Players'):GetPlayers() do
                            if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                                pcall(function()
                                    v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
                                    v.Character.HumanoidRootPart.Transparency = 0.5
                                    v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really Red")
                                    v.Character.HumanoidRootPart.Material = "Neon"
                                    v.Character.HumanoidRootPart.CanCollide = false
                                end)
                            end
                        end
                    end
                end)
            end
       else
           print("Toggle Off")
               _G.Disabled = false
              
               game:GetService('RunService').RenderStepped:connect(function()
                    if _G.Disabled then
                        for i,v in next, game:GetService('Players'):GetPlayers() do
                            if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                                pcall(function()
                                    v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
                                    v.Character.HumanoidRootPart.Transparency = 0.5
                                    v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really Red")
                                    v.Character.HumanoidRootPart.Material = "Neon"
                                    v.Character.HumanoidRootPart.CanCollide = false
                                end)
                            end
                        end
                    end
                end)
        end
    end)
    
    CombatSection:NewToggle("TriggerBot", "Auto Shoots When player are in sight", function(state)
        
        if state then
            local player = game:GetService("Players").LocalPlayer
        	local mouse = player:GetMouse()
    	    game:GetService("RunService").RenderStepped:Connect(function()
    		if mouse.Target.Parent:FindFirstChild("Humanoid") and mouse.Target.Parent.Name ~= player.Name then
    			mouse1press() wait() mouse1release()
    		end
    		
    	end)
        else
            print("off")
            
        end
    end)
    
    
    
    --Others
    OthersSection:NewButton("Other Stuff", "Another Small GUI that someone else made", function()
        print("Clicked")
        loadstring(game:HttpGet("https://raw.githubusercontent.com/2dgeneralspam1/scripts-and-stuff/master/scripts/LoadstringLQL8ojjbPQMS", true))()
    
    end)

end
-----------------------------------------------------------------------------------------------
      
